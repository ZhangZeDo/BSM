<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hltj.api.dao.TStockConfigMapper" >
  <resultMap id="BaseResultMap" type="com.hltj.api.domain.TStockConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="config_name" property="configName" jdbcType="VARCHAR" />
    <result column="config_condition" property="configCondition" jdbcType="VARCHAR" />
    <result column="seq_no" property="seqNo" jdbcType="INTEGER" />
    <result column="config_content" property="configContent" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, config_name, config_condition, seq_no, config_content, create_datetime, created_by, 
    update_datetime, updated_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hltj.api.domain.TStockConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stock_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_stock_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_stock_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hltj.api.domain.TStockConfigExample" >
    delete from t_stock_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hltj.api.domain.TStockConfig" >
    insert into t_stock_config (id, config_name, config_condition, 
      seq_no, config_content, create_datetime, 
      created_by, update_datetime, updated_by
      )
    values (#{id,jdbcType=INTEGER}, #{configName,jdbcType=VARCHAR}, #{configCondition,jdbcType=VARCHAR}, 
      #{seqNo,jdbcType=INTEGER}, #{configContent,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{updateDatetime,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hltj.api.domain.TStockConfig" >
    insert into t_stock_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="configName != null" >
        config_name,
      </if>
      <if test="configCondition != null" >
        config_condition,
      </if>
      <if test="seqNo != null" >
        seq_no,
      </if>
      <if test="configContent != null" >
        config_content,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configCondition != null" >
        #{configCondition,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null" >
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="configContent != null" >
        #{configContent,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hltj.api.domain.TStockConfigExample" resultType="java.lang.Integer" >
    select count(*) from t_stock_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stock_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configName != null" >
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configCondition != null" >
        config_condition = #{record.configCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null" >
        seq_no = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.configContent != null" >
        config_content = #{record.configContent,jdbcType=VARCHAR},
      </if>
      <if test="record.createDatetime != null" >
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null" >
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDatetime != null" >
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null" >
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stock_config
    set id = #{record.id,jdbcType=INTEGER},
      config_name = #{record.configName,jdbcType=VARCHAR},
      config_condition = #{record.configCondition,jdbcType=VARCHAR},
      seq_no = #{record.seqNo,jdbcType=INTEGER},
      config_content = #{record.configContent,jdbcType=VARCHAR},
      create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hltj.api.domain.TStockConfig" >
    update t_stock_config
    <set >
      <if test="configName != null" >
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configCondition != null" >
        config_condition = #{configCondition,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null" >
        seq_no = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="configContent != null" >
        config_content = #{configContent,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hltj.api.domain.TStockConfig" >
    update t_stock_config
    set config_name = #{configName,jdbcType=VARCHAR},
      config_condition = #{configCondition,jdbcType=VARCHAR},
      seq_no = #{seqNo,jdbcType=INTEGER},
      config_content = #{configContent,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <sql id="queryByCaluse">
    <trim prefix="WHERE" prefixOverrides="AND | OR ">
      <if test="param.configName !=null and param.configName !='' ">
        and config_name like CONCAT('%',#{param.configName},'%')
      </if>
    </trim>
  </sql>

  <select id="selectByStockConfigDTO" resultMap="BaseResultMap" parameterType="com.hltj.api.dto.StockConfigDTO">
    select
    <include refid="Base_Column_List" />
    from t_stock_config
    <include refid="queryByCaluse"/>
    order by seq_no asc
    <if test="param.startNum >= 0" >
      limit ${param.startNum},${param.pageSize}
    </if>
  </select>
  <select id="selectTotalByStockConfigDTO" resultType="int">
    select count(1) from t_stock_config
    <include refid="queryByCaluse"/>
  </select>
</mapper>